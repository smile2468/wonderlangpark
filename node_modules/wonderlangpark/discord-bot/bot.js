const Discord = require('discord.js');
const client = new Discord.Client();
const wonder = require('wonderlangpark')
const token = "NTIwODE2NzEzNTg4Mjc3MjU2.D1ojsw.X9Aahl6JLxJ7UYhLACDGHnQGCSo"
const config = require('./config')

client.on("message",  async message => {
 if(message.author.bot) return; //봇 사용자가 봇일시 무시합니다
 if(message.channel.type === "dm") return; //봇 사용채널이 개인 메세지일시 무시합니다
 message.data = {
    raw: message.content,
    arg: message.content.split(' ').slice(1),
    args: message.content.slice(message.content.split(' ')[0].length+1),
    prefix: message.content.substr(0, 1),
    cmd: message.content.split(' ')[0].toLowerCase()
  }
if(message.content.startsWith(config.prefix) !== 0) return;



switch(message.data.cmd.replace(message.data.prefix, '')){
    case "도움":
    case "도움말":
    case "help":
    case "commands":

        message.channel.send({embed: new Discord.RichEmbed()
        .addField('Wonder_Lang','이 봇은 원더어의 예시 디스코드 봇입니다.')
        .addField('명령어 리스트', `\`${message.data.prefix}도움\` - 해당 명령어입니다!\n\`${message.data.prefix}번역 [원더어|한글] [텍스트]\` - 텍스트를 번역합니다(원더어만 지원)`)
        .setFooter(`npm i wonderlangpark`)
        .setColor(message.guild.me.displayHexColor)
        })
    break;

    
    case "번역":
        if(!message.arg[1]) return message.reply(`잘못되었습니다\n\`${message.data.prefix}번역 [원더어|한글] [텍스트]\``)
        if(message.data.arg[0] == '원더어'|'wonder'|'원'|'원더'|'w') message.channel.send(wonder.towonder(message.data.args.replace(message.data.arg[0],'')))
    };
})


client.on('ready', () => {


    client.user.setGame(config.prefix+'번역');//봇의 플레이중 설정 코드입니다.


console.log("Bot is Ready!")
  });

client.login(`${token}`);
process.on('unhandledRejection', error => {
  // Will print "unhandledRejection err is not defined"
  console.log('unhandledRejection', error.message);
});
