{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 91efa7c7dcc8efffbac9","webpack:///./index.js","webpack:///./fillInJosa.js","webpack:///./josaPicker.js","webpack:///../~/jongseong/dist/index.js","webpack:///./util.js"],"names":["josa","getJosaPicker","makeJosaify","fillInJosa","str","replace","_","noun","trim","table","put","j1","j2","f","get","j","Error","makeJosaPicker","w","install","word"],"mappings":"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","file":"index.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"josa\"] = factory();\n\telse\n\t\troot[\"josa\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 91efa7c7dcc8efffbac9","import fillInJosa from './fillInJosa'\nimport { getJosaPicker, makeJosaify } from './util'\n\nexport {\n  fillInJosa as josa,\n  getJosaPicker,\n  makeJosaify\n}\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","import { get } from './josaPicker'\n\n// fillInJosa : string -> string\n// Fills in the josa placeholders: 친구#{이} 학교#{으로} -> 친구가 학교로\nconst fillInJosa = str =>\n  str.replace(\n   /* +++(___ ____ ____)#{---------} */\n    /(\\S+(?:\\([^)]*\\))?)#\\{([^}]+)\\}/g,\n    (_, noun, josa) => noun + get(josa.trim())(noun)\n  )\n\nexport default fillInJosa\n\n\n\n// WEBPACK FOOTER //\n// ./fillInJosa.js","import { code, hasJongseong } from 'jongseong'\n\n// A Josa is one of:\n//   - '은'  - '는'\n//   - '이'  - '가'\n//   - '을'  - '를'\n//   - '과'  - '와'\n//   - '이었'  - '였'\n//   - '이어'  - '여'\n//   - '이에요'  - '예요'\n//   - '아'  - '야'\n//   - '이'?\n//   - '으로'  - '로'\n\n// A JosaPicker is a fuction: string -> Josa\n//   - Determines josa for a given word.\n\n// table : object\n// State. Manages the josa-pickers.\nconst table = {}\n\n// put : Josa * Josa * JosaPicker -> void\n// Effect. Puts f into table with two given names.\nconst put = (j1, j2, f) => {\n  table[j1] = f\n\n  if (j2) {\n    table[j2] = f\n  }\n}\n\n// get : Josa -> JosaPicker\n// Given a josa, returns a josa-picker (if possible).\n// Effect. Searches table for a josa-picker with name josa.\nconst get = j => {\n  const f = table[j]\n\n  if (!f) {\n    throw new Error(`Cannot handle this josa: ${j}`)\n  }\n\n  return f\n}\n\n// makeJosaPicker : Josa * Josa -> JosaPicker\n// Given two josa options, produces a josa-picker.\nconst makeJosaPicker = (j1, j2) => w =>\n  hasJongseong(w) ? j1.replace(/\\?$/, '') : j2\n\n// install : Josa * Josa * JosaPicker? -> void\n//   - j1 is for a word with a tail consonant.\n//   - j2 is for a word with no tail consonant.\n//   - f is an optional josa-picker for exceptional cases: '으로'\n// Effect. Sets up a josa-picker that chooses between j1 and j2.\nconst install = (j1, j2, f) => {\n  put(j1, j2, f || makeJosaPicker(j1, j2))\n}\n\ninstall('은', '는')\ninstall('이', '가')\ninstall('을', '를')\ninstall('과', '와')\ninstall('이었', '였')\ninstall('이어', '여')\ninstall('이에요', '예요')\ninstall('아', '야')\ninstall('이?', '')\ninstall('으로', '로', w => code(w) === 8 ? '로' : makeJosaPicker('으로', '로')(w))\n\nexport { makeJosaPicker\n       , get\n       }\n\n\n\n// WEBPACK FOOTER //\n// ./josaPicker.js","'use strict';\n\n// A JongseongCode is an integer[0...27].\n//   - Each code represents a tail consonants.\n//     code  |  e.g.\n//    -------+------\n//       0   |   가\n//       1   |   각\n//       2   |   갂\n//       3   |   갃\n//       4   |   간\n//       5   |   갅\n//       6   |   갆\n//       7   |   갇\n//       8   |   갈\n//       9   |   갉\n//      10   |   갊\n//      11   |   갋\n//      12   |   갌\n//      13   |   갍\n//      14   |   갎\n//      15   |   갏\n//      16   |   감\n//      17   |   갑\n//      18   |   값\n//      19   |   갓\n//      20   |   갔\n//      21   |   강\n//      22   |   갖\n//      23   |   갗\n//      24   |   갘\n//      25   |   같\n//      26   |   갚\n//      27   |   갛\n\n// _codeForHangul :: string -> JongseongCode\n// Given a Hangul letter, computes its jongseong code.\n// Assume h is a single letter Hangul string (가-힣).\n//   - 44032 (AC00) is the code point of 가, which is the first Hangul letter.\n//   - 28 = the number of the jongseongs + 1\nvar _codeForHangul = function _codeForHangul(h) {\n  return (h.charCodeAt(0) - 44032) % 28;\n};\n\n// code :: string -> JongseongCode\n// Given a string of zeros, returns its jongseong code.\n// e.g. _codeForZeros('00') === 1    (100 = 백)\n//   the number |\n//   of zeros   |\n//   -----------+-------\n//       1      |  십\n//       2      |  백\n//       3      |  천\n//     4 ~ 7    |  만\n//     8 ~ 11   |  억\n//    12 ~ 15   |  조\n//    16 ~ 19   |  경\n//    20 ~ 23   |  해\nvar _codeForZeros = function _codeForZeros(zs) {\n  var n = zs.length;\n\n  if (n === 1) {\n    return 17;\n  }\n  if (n === 2 || n >= 8 && n <= 11) {\n    return 1;\n  }\n  if (n >= 3 && n <= 7) {\n    return 4;\n  }\n  if (n >= 12 && n <= 15 || n >= 20 && n <= 23) {\n    return 0;\n  }\n  if (n >= 16 && n <= 19) {\n    return 21;\n  }\n\n  throw new Error(\"It's too large.\");\n};\n\n// _codeForDigit :: string -> JongseongCode\n// Given a digit, returns its jongseong code.\n// Assume d is one of: '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'\nvar _codeForDigit = function _codeForDigit(d) {\n  return [21, 8, 0, 16, 0, 0, 1, 8, 8, 0][d];\n};\n\n// _codeForEnglish :: string -> JongseongCode\n// Given a two-letter English string, returns its jongseong code.\n// Assume e is a two-letter English string.\nvar _codeForEnglish = function _codeForEnglish(e) {\n  return (/ck/i.test(e) ? 1 : /.n/i.test(e) ? 4 : /ne/i.test(e) ? 4 : /.l/i.test(e) ? 8 : /le/i.test(e) ? 8 : /.m/i.test(e) ? 16 : /ob/i.test(e) ? 17 : /.p/i.test(e) ? 17 : /et/i.test(e) ? 19 : /ng/i.test(e) ? 21 : /* else      */0\n  );\n};\n\n// _codeForEnglishInitial :: string -> JongseongCode\n// Given an English letter, returns its jongseong code.\n// Assume e is a single-letter English string.\nvar _codeForEnglishInitial = function _codeForEnglishInitial(e) {\n  switch (e.toLowerCase()) {\n    case 'l':\n    case 'r':\n      return 8;\n    case 'm':\n      return 16;\n    case 'n':\n      return 4;\n    default:\n      return 0;\n  }\n};\n\n// code :: string -> JongseongCode\n// Computes the jongseong code of a given string.\n// If there isn't any recognizable letter in word, returns 0 (no jongseong).\nvar code = function code(word) {\n  if (!word) {\n    return 0;\n  }\n\n  // !!! Ignore letters inside parentheses.\n  var w = word.replace(/\\([^)]*\\)$/, '');\n  var last = w[w.length - 1];\n\n  if (/[가-힣]/.test(last)) {\n    return _codeForHangul(last);\n  }\n\n  if (/[1-9]0+$/.test(w)) {\n    var zerosMatch = /0+$/.exec(w);\n\n    return _codeForZeros(zerosMatch[0]);\n  }\n\n  if (/\\d/.test(last)) {\n    return _codeForDigit(last);\n  }\n\n  if (/[a-z]{2}$/i.test(w)) {\n    return _codeForEnglish(w.slice(w.length - 2, w.length));\n  }\n\n  if (/(?:^|[^a-z])[a-z]$/i.test(w)) {\n    return _codeForEnglishInitial(last);\n  }\n\n  if (/(^|[^a-z])[a-z][^a-z]?$/i.test(w)) {\n    return _codeForEnglishInitial(w[w.length - 2]);\n  }\n\n  return code(w.slice(0, w.length - 1));\n};\n\n// hasJongseong :: string -> boolean\n// Does the last letter of a given word have a jongseong?\nvar hasJongseong = function hasJongseong(w) {\n  return code(w) !== 0;\n};\n\nmodule.exports = {\n  _codeForHangul: _codeForHangul,\n  _codeForZeros: _codeForZeros,\n  _codeForDigit: _codeForDigit,\n  _codeForEnglish: _codeForEnglish,\n  _codeForEnglishInitial: _codeForEnglishInitial,\n  code: code,\n  hasJongseong: hasJongseong\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/jongseong/dist/index.js\n// module id = 3\n// module chunks = 0","import { get } from './josaPicker'\n\n// A Josaify is a function: string -> string\n//   - Produces a given word with a josa appended.\n\n// makeJosaify : Josa -> Josaify\n// Given a josa, produces a josaify.\nconst makeJosaify = josa => word =>\n  word + get(josa)(word)\n\n// getJosaPicker : Josa -> JosaPicker\nconst getJosaPicker = get\n\nexport { getJosaPicker\n       , makeJosaify\n       }\n\n\n\n// WEBPACK FOOTER //\n// ./util.js"],"sourceRoot":""}